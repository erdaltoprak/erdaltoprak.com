---
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
	// Build paths from both collections for legacy URLs
	const articles = await getCollection('articles');
	const notes = await getCollection('notes');

	const paths = [...articles, ...notes].map(post => ({
		params: { slug: post.slug.replace(/\/index$/, '') }
	}));
	return paths;
}

const { slug } = Astro.params;

// @ts-ignore
const articleMatch = (await getCollection('articles')).find(p => p.slug.replace(/\/index$/, '') === slug);
// @ts-ignore
const noteMatch = (await getCollection('notes')).find(p => p.slug.replace(/\/index$/, '') === slug);

let target = '';
if (articleMatch) target = `/articles/${articleMatch.slug}/`;
else if (noteMatch) target = `/notes/${noteMatch.slug}/`;
else target = '/';
---
<html>
	<head>
		<meta http-equiv="refresh" content={`0; url=${target}`} />
		<link rel="canonical" href={target} />
	</head>
	<body></body>
</html>
