import rss from '@astrojs/rss';
import { getCollection } from 'astro:content';
import sanitizeHtml from 'sanitize-html';
import MarkdownIt from 'markdown-it';
const parser = new MarkdownIt();

interface Context {
  site: string;
}

interface Post {
  slug: string;
  body: string;
  data: Record<string, any>;
  collection: string;
}

export async function GET(context: Context) {
    // @ts-ignore - new collections will be generated by Astro content collections
    const articles = await getCollection('articles');
    // @ts-ignore
    const notes = await getCollection('notes');

    const allPosts: Post[] = [
      ...articles.map(p => ({ ...p, collection: 'articles' })),
      ...notes.map(p => ({ ...p, collection: 'notes' }))
    ].sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

    return rss({
      title: 'Erdal Toprak â€“ All content',
      description: 'Latest articles and notes',
      site: context.site,
      stylesheet: '/rss/styles.xsl',
      items: allPosts.map((post) => ({
        link: `/${post.collection}/${post.slug}/`,
        content: sanitizeHtml(parser.render(post.body), {
          allowedTags: sanitizeHtml.defaults.allowedTags.concat(['img'])
        }),
        ...post.data,
      })),
    });
  }